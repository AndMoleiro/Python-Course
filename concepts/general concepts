- literal
    -> a value of some type (numeric literals, string literals)

- function
    -> a named block of code that we can call, by using its name
    -> we can write our own functions, or we can use pre build functions like print
    -> in python, all functions return a value

- argument
    -> a value passed to a function, in order to give it values to work with
    -> arguments appear in parentheses after the function name

- calling a function
    -> using the function name to execute the function's code

- return value
    -> the value a function returns

- parameter
    ->

- Variable: A way to give a (meaningful) name to an area of memory, into which we can place certain values.

    Eg: greeting = "Hello"

        When we create the variable "greeting", Python allocates an area of memory for us. It knows to refer to that area whenever we talk about the variable "greeting".

        Because we created "greeting" by attaching it to a string value, Python also decided that greeting was a variable of type string, and ensures that we can only do things with it that make sense for strings.

    - Python variable names must begin with a letter (upper or lower case) or an underscore.

    - They can contain letters, numbers or underscore characters

    - They are case-sensitive (Greeting and greeting would be two different variables)

    - Variables are created when they are first attached to a value, using =

- expression: anything that can be calculated to return a value.

    Eg: print(a + b) -> evaluates to the result